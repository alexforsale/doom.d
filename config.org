#+title: Konfigurasi Doom emacs
#+author: Kristian Alexander P
#+email: alexforsale@yahoo.com
#+startup: content
#+property: header-args :tangle yes

* Intro
Bukan untuk dijadikan acuan atau basis /tutorial/, hanya mengupas sedikit dari:

** Emacs
Sejarah singkat /emacs/ mungkin lebih meyakinkan jika dijelaskan oleh [[https://en.wikipedia.org/wiki/Emacs][/wikipedia/]], saya disini hanya bisa menjelaskan mengapa saya lebih memilih /emacs/ dibandingkan /vim/.
Ini sangat berkaitan dengan awal perkenalan saya dengan /linux/, ketika itu masih menggunakan [[https://blankonlinux.or.id/index.html][/blankon/]] yang sudah pindah ke /debian/ sebagai basis. Ketika itu saya masih dalam pencarian atau seleksi /program/ untuk mengganti semua /program/ yang tersedia di /OS/ primitif sebelumnya. Kebanyakan yang saya butuhkan hanyalah teks /editor/, /music player/ dan /video player/ pada umumnya untuk penyegaran. Motivasi saya untuk migrasi ke /linux/ pun dikarenakan "lingkungan" /linux/ kelihatannya lebih "nyaman" untuk /oprek - oprek/ /android/ (kala itu baru transisi dari /gingerbread/ ke /ice cream sandwich/).
Di /OS/ primitif, untuk teks /editor/ saya cuma punya satu pilihan: /notepad++/, jadi sangat mengejutkan kala itu ketika migrasi ke /linux/ ternyata ada [[https://en.wikipedia.org/wiki/Editor_war][perang berkepanjangan]] menyangkut /text editor/.
Sebagai penghuni baru di negeri /linux/, tentunya saya perlu mengetahui lebih lanjut mengenai kedua belah pihak yang berperang, jadi saya coba satu persatu:
+ [[https://en.wikipedia.org/wiki/Vi][vi]]/[[https://en.wikipedia.org/wiki/Vim_(text_editor)][vim]] :: Entah kala itu di /blankon/ versi mana yang terpasang secara /default/, bisa jadi saya install /vim/ secara manual, yang saya ingat setelah instalasi, coba jalankan di /terminal emulator/, dan /bengong/ melihat konsep /modal editor/. Singkat kata saya menyelesaikan (mungkin) 1/4 dari /vimtutor/ dan menyerah.
  Tapi saya masih tertarik mengingat mayoritas dari /distro linux/ menyediakan /vi/ atau variannya secara /default/.
+ /emacs/ :: Cukup lama juga saya mempelajari /emacs/, lebih menarik dari /vim/ karena versi /GUI/ nya lebih "masuk akal" ke otak saya yang kala itu masih berorientasi ke "/visual interface/" yang masih "klik sana - sini", setelah sekian lama berada didalam /OS/ primitif. Tapi tetap tidak bertahan lama begitu mengetahui kombinasi /keyboard/ nya yang sangat rumit dan susah diingat. Ditambah pula, /emacs vanilla/ (tanpa konfigurasi sama sekali), benar - benar membingungkan, dan untuk melakukan konfigurasi pun masih ada satu hambatan lagi: [[https://en.wikipedia.org/wiki/Emacs_Lisp][/emacs-lisp/]].
Jadi saya bertualang entah berapa lama mencoba - coba banyak /editor/ lain (dan juga /distro/ lainnya, bahkan /OS/ lain). Tapi tetap sedikit demi sedikit saya mempelajari /vi/, /vim/ dan /emacs/, karena memang diperlukan:
+ Secara /default/, /key/ navigasi /emacs/ digunakan oleh /bash/ (dan banyak /shell/ lainnya), seperti =C-f=, =C-b= untuk maju dan mundur satu karakter (=C= disini berarti tombol =Control=), =C-a= dan =C-e= untuk ke awal/akhir baris, dan lainnya.
+ Juga secara /default/ (jika tidak dirubah oleh /distro/), perintah ~visudo~ untuk merubah /file/ konfigurasi ~sudo~ menggunakan /vi/.
Seiring dengan berjalannya waktu, bertambah juga pengetahuan saya tentang /vim/ dan /emacs/, tidak banyak, tapi cukup untuk mencoba menggunakan keduanya secara bersamaan. Dan mungkin sekitar 2012 atau 2013 saya baru bisa menyelesaikan kedua /tutorial/ yang disediakan oleh kedua /program/ tersebut.
Tapi tetap saya lebih condong ke /emacs/, karena satu hal: =org-mode=, simpelnya merupakan salah satu dari sekian banyak /plugin/ untuk /emacs/, [[https://en.wikipedia.org/wiki/Org-mode][/org-mode/]] awalnya dibuat sebagai /organizer/, /notes/ dan juga untuk /formatting/ berbagai /markup language/. File /readme/ ini, dibuat dengan /org-mode/, dan juga berfungsi sebagai /file/ konfigurasi untuk /doom emacs/!

** Doom Emacs
[[https://github.com/hlissner/doom-emacs][/Doom Emacs/]], menurut saya, adalah jawaban untuk perang editor yang berkepanjangan diatas. Kompilasi dari banyak /module emacs/ yang sering digunakan, siap pakai tanpa perlu melakukan konfigurasi yang memakan waktu 2 bulan(walaupun sebenarnya bisa saja di/tweak/ habis - habisan). Penjelasan /TL;DR/-nya: /doom emacs/ sebenarnya /emacs/ dengan /emacs/ yang didapat melalui /package manager/ dari /distro unix/ pada umumnya, bedanya hanya di /bundling/ khusus dengan konfigurasi /ala/ /[[https://github.com/emacs-tw/awesome-emacs#starter-kit][starter-kit]]/ untuk mempersingkat waktu, dan juga memberi kemudahan akses untuk para pengguna /emacs/ baru. Karena kebanyakan orang - orang tidak mau/mampu mengalokasikan waktu lebih hanya untuk menyesuaikan /editor/.
Seperti /starter-kit/ lain, seringkali tidak semua /tools/ yang ada didalam kotak berguna bagi pemiliknya, jadi sebelum kita tersesat dalam hutan /elisp/ berkepanjangan tiada akhir, kita perlu mengetahui: apa yang kita butuhkan dari /doom emacs/?

* Apa yang ingin didapat dari /doom/?
** /Text Editor/
Ini mestinya sudah jelas, jadi harus ada yang membedakan /emacs/ dengan editor lainnya. Perjalanan saya cukup panjang dari yang awalnya mengharapkan ada manusia baik hati yang bersedia /[[https://github.com/notepad-plus-plus/notepad-plus-plus/blob/master/SUPPORTED_SYSTEM.md][porting notepad++]]/ ke /linux/ -> mulai menyesuaikan dengan /nano/, penasaran mengapa disetiap /distro/ selalu ada /vi/, sampai sekarang yang sama sekali tidak ada minat menggunakan /editor/ lain. Fitur yang jelas sekali manfaatnya buat saya adalah /fleksibilitas/:
- Tidak perlu ke /command line/ jika hanya ingin /mengedit/ satu /file/ di komputer lain([[https://www.emacswiki.org/emacs/TrampMode][tramp]]).
- Tidak membutuhkan /terminal multiplexer/ seperti /screen/ atau /tmux/.
- =org-mode=, /nuff said/.
** /Email client/
Ada 3 /module/ tersedia dalam /doom/ untuk /email client/, hanya /wanderlust/ yang belum pernah saya coba, kalau berdasarkan pengalaman saya mencoba dua lainnya, sepertinya tidak ada masalah.
** Vterm
Ini yang membedakan /emacs/ dengan /editor/ lainnya menurut saya, saya sudah jarang menggunakan /terminal emulator/ seperti /urxvt/, /xterm/ dan lainnya setelah mengetahui /vterm/.
** Org-mode
/Emacs/ adalah /editor/ yang sudah eksis lama sekali, namun begitu muncul /org-mode/, rasanya seperti orang gua yang minum /steroid/. Ini yang membuat /emacs/ menjadi /organizer/.
* Konfigurasi?
/Repo/ konfigurasi ini sudah saya gunakan lumayan lama, dan juga sudah mengalami beberapa kali perubahan drastis. Mudah - mudahan yang ini bertahan lama.
Kesalahan yang (berulang kali) saya buat adalah kebanyakan /tweak/ yang sebenarnya tidak terlalu saya butuhkan, kebanyakan /keybinding/ yang harus dibiasakan. Tidak seperti konfigurasi /emacs/ yang dilakukan sendiri, /doom/ adalah sebuah komunitas yang terus menerus melakukan perkembangan, jadi seringnya saya melakukan modifikasi hanya karena penasaran ada /permen/ baru.
** Dependency Doom
Selain =emacs=, /doom/ juga membutuhkan =ripgrep= dan =fd-find= (terkadang dengan nama =fd=). =sh= membutuhkan =shellcheck=, =Org-roam= membutuhkan =graphviz=, untuk /email/ tentunya membutuhkan =mbsync= dan =mu=.

** File konfigurasi
Begitu selesai melakukan instalasi /doom/, secara otomatis akan dibuat satu /directory/ untuk konfigurasi yang berada di salah satu dari:
- =~/.config/doom=, atau
- =~/.doom.d=
Hanya satu dari kedua /directory/ tersebut yang diambil oleh /doom/, bisa disesuaikan dengan merubah /environment variable/ =DOOMDIR=. /Directory/ tersebut akan berisi:
- init.el :: /file/ ini yang paling awal dievaluasi oleh /emacs/ ketika sesi /emacs/ dimulai; sebelum /file - file/ lainnya di /load/, umumnya selain blok kode ~doom!~, tidak diperlukan penambahan kode lainnya di /file/ ini.
- config.el :: disini semua konfigurasi /doom/ dilakukan, karena saya [[file:init.el::literate][menggunakan fitur /literate/]] di /file/ =init.el=, /doom/ akan mengambil /file/ =config.org= untuk dijadikan sebagai /file/ konfigurasi, melakukan /parsing/ setiap blok kode /emacs-lisp/ yang ada di /file/ ini.
- packages.el :: semua konfigurasi menyangkut manajemen /package/ dilakukan disini, juga dengan fitur /literate/, diatur didalam /file/ ini.
** Informasi dasar
Konfigurasi yang di-/set/ di =~/.doom.d/config.el=, ketika kita melakukan /fresh install/ /doom/.

Menggunakan /lexical binding/ agar /file/ ini berjalan lebih cepat (lengkapnya lihat di post blog [[https://nullprogram.com/blog/2016/12/22/][ini]]).
#+BEGIN_SRC emacs-lisp :comments no
;;; config.el -*- lexical-binding: t; -*-
#+END_SRC
*** Personal
Digunakan dibeberapa tempat, lebih sering oleh /GPG/:
#+BEGIN_SRC emacs-lisp
(setq user-full-name "Kristian Alexander"
      user-mail-address "alexforsale@yahoo.com")
#+END_SRC
*** Font
#+BEGIN_SRC emacs-lisp
(ignore-errors
  (setq doom-font (font-spec :family "Fantasque Sans Mono" :size 9)
        doom-big-font (font-spec :family "Fantasque Sans Mono" :size 14)
        doom-variable-pitch-font (font-spec :family "Source Code Pro" :size 8)
        doom-serif-font (font-spec :family "Source Serif Pro" :weight 'light)))
#+END_SRC
*** Theme
#+BEGIN_SRC emacs-lisp
(setq doom-theme 'doom-solarized-dark)
#+END_SRC
** Konfigurasi default
/Out of the box/, atau tanpa kita lakukan perubahan diawal, didalam /file/ =init.el= /module - module/ yang otomatis aktif:
*** :completion
[[file:~/.emacs.d/modules/completion/company/README.org::+TITLE: completion/company][company]] dan [[file:~/.emacs.d/modules/completion/vertico/README.org::+TITLE: completion/vertico][vertico]].
**** [0/2] IDEA
***** [ ] Defaultnya =company-backends= yang aktif hanya sedikit, kita perlu menambahkan sendiri /backend/ yang dibutuhkan:
#+name: company-backend
#+begin_src emacs-lisp
(after! sh-script
  (set-company-backend! 'sh-mode
    '(company-shell :with company-yasnippet)))
#+end_src
***** [ ] Pelajari /binding default/ untuk /[[file:~/.emacs.d/modules/completion/company/README.org::*Code completion][company]]/ dan /[[file:~/.emacs.d/modules/completion/vertico/README.org::*Vertico keybindings][vertico]]/. Mayoritas dari /binding/ tersebut hanya tersedia dalam moda tertentu.
*** :ui
Kebanyakan /module/ disini hanya untuk penampilan. Tapi ada beberapa yang menarik:
**** [[file:~/.emacs.d/modules/ui/deft/README.org::+TITLE: ui/deft][deft]]
Tidak aktif secara /default/. Berguna untuk /filtering notes/ dalam bentuk /org-mode/, /markdown/, atau /LaTex/.
***** DONE Kombinasikan dengan =org-roam=.
CLOSED: [2022-01-12 Wed 03:54]
:LOGBOOK:
- CLOSING NOTE [2022-01-12 Wed 03:54] \\
  already implemented
:END:
#+name: integrasikan dengan =org-roam=
#+begin_src emacs-lisp
(setq deft-directory org-roam-directory
      deft-recursive t)
#+end_src
/key binding/ di =SPC n d=.
**** [[file:~/.emacs.d/modules/ui/workspaces/README.org::+TITLE: ui/workspaces][workspace]]
=SPC-TAB [= dan =SPC TAB ]= untuk berpindah /workspaces/. Aktif /Default/.
**** [[file:~/.emacs.d/modules/ui/zen/README.org::+TITLE: ui/zen][zen]]
Membantu fokus dalam pengetikan.
#+begin_src emacs-lisp
(setq +zen-text-scale 0.8) ; set scaling font yang tidak terlalu besar
#+end_src

*** :editor
**** [[file:~/.emacs.d/modules/editor/evil/README.org::+TITLE: editor/evil][evil]] (dengan tambahan plugin +everywhere)
Aktif secara /default/. Mungkin salah satu alasan terbesar orang - orang menggunakan /doom/.
**** [[file:~/.emacs.d/modules/editor/file-templates/README.org::+TITLE: editor/file-templates][file-templates]]
Semacam /snippet/ untuk mengisi /template/ di /file/ baru, umumnya lisensi /open source software/. Aktif /default/.
**** [[file:~/.emacs.d/modules/editor/fold/README.org::+TITLE: editor/fold][fold]]
/function/ untuk /melipat/ teks, umumnya untuk /code/, bekerja secara otomatis biasanya berdasarkan indentasi, atau seperti dalam /lisp/, berdasarkan karakter /()/.
**** [[file:~/.emacs.d/modules/editor/snippets/README.org::+TITLE: editor/snippets][snippet]]
Sebenarnya /yasnippet/ dengan /snippet/ dari /doom/.
*** :emacs
**** [[file:~/.emacs.d/modules/emacs/dired/README.org::+TITLE: emacs/dired][dired]]
Kalau tidak dari /directory editor/, yang merupakan module bawaan /emacs/. /Plugin/ =+ranger= membuat tampilan menjadi seperti /terminal file manager/ dengan nama yang sama.
**** [[file:~/.emacs.d/modules/emacs/undo/README.org::+TITLE: emacs/undo][undo]]
/Defaultnya/ menggunakan /undo-fu/.
**** [[file:~/.emacs.d/modules/emacs/vc/README.org::+TITLE: emacs/vc][vc]]
/Module/ bawaan /emacs/ yang diberi bumbu tambahan untuk integrasi dengan /git/.
*** :checker
**** [[file:~/.emacs.d/modules/checkers/syntax/README.org::+TITLE: checkers/syntax][syntax]]
/Flycheck/, yang membutuhkan /linter/ tambahan agar bisa operasional.
*** :tools
**** [[file:~/.emacs.d/modules/tools/eval/README.org::+TITLE: tools/eval][eval]], dengan tambahan plugin =+overlays=
/Inline code evaluation/, tanpa =+overlays= /result/ akan muncul di /minibuffer/.
**** [[file:~/.emacs.d/modules/tools/lookup/README.org::+TITLE: tools/lookup][lookup]]
/Code navigation/
- =+dictionary= :: menambahkan fitur /thesaururs/.
- =+offline= :: mengurangi beban internet, /download/ kamus sebisa mungkin.
- =docset= :: integrasi dengan =Dash.app=
Membutuhkan /package/ tambahan: =ripgrep=, =sqlite=, dan =wordnet-cli=.
**** [[file:~/.emacs.d/modules/tools/magit/README.org::+TITLE: tools/magit][magit]]
Salah satu senjata utama /emacs/. /Interface/ untuk /git/, tersedia /plugins/ =+forge=.
*** :lang
Mayoritas pengguna /doom/ dan /emacs/ pada umumnya akan lebih banyak meluangkan waktu untuk konfigurasi /module - module/ disini. Karena secara /default/ hanya =org-mode=, =markdown=, =sh=, dan =emacs-lis= (tentunya) yang aktif.
*** TODO :email
Saya sepertinya sudah nyaman dengan konfigurasi =mu= dan =mbsync=, namun keputusan akhir tetap berada ditangan /provider/ email...
*** org-mode
Dengan cakupan /org-mode/ yang sangat luas, perlu satu /heading/ tersendiri untuk /org-mode/ dan keluarganya.
- /Set/ ~org-directory~:
#+begin_src emacs-lisp
(setq org-directory "~/Documents/google-drive/org")
#+end_src
- /Map/ =Alt-n= dan =Alt-p= untuk navigasi heading, di /default/-nya kedua /function/ ini di-/bind/ di =C-c C-n= dan =C-c C-p=.
  #+begin_src emacs-lisp
(map! :map org-mode-map
      "M-n" #'outline-next-visible-heading
      "M-p" #'outline-previous-visible-heading)
  #+end_src
- Informasi yang di /record/ ketika /task/ dipindahkan ke /state DONE/:
  #+begin_src emacs-lisp
(setq org-log-done 'note ;- Informasi yang di record ketika task dipindahkan ke state DONE.
      org-log-reschedule 'note ; sama, namun ketika tanggal schedule diubah
      org-log-redeadline 'note ; sama, untuk ketika deadline diubah
      org-log-note-clock-out t ; rekam stamp waktu ketika item di clock-out
      org-log-refile 'note ; informasi yang direkam ketika task di refile
      org-log-into-drawer t ; masukan note perubahan status dan time stamp kedalam drawer
      org-treat-insert-todo-heading-as-state-change t ; perlakukan perubahan heading todo sebagai perubahan status
      )
  #+end_src
- Kustomisasi tambahan untuk /org-capture-templates/.
  #+begin_src emacs-lisp
(after! org
  (setq org-capture-templates
        '(
          ("t" "Personal todo" entry
           (file+headline +org-capture-todo-file "Inbox")
           "* [ ] TODO %?
:PROPERTIES:
:Via:
:Note:
:END:
:LOGBOOK:
- State \"TODO\"    from \"\"    %U
:END:" :empty-lines 1)
          ("n" "Personal notes" entry
           (file+headline +org-capture-notes-file "Inbox")
           "* %?
:PROPERTIES:
:Date: %U
:Via: %:annotation
:Note: %:note
:END:
%i
" :prepend t)
          ("j" "Journal" entry
           (file+olp+datetree +org-capture-journal-file)
           "* %?
:PROPERTIES:
:Date: %U
:Via: %:annotation
:END:
%i
" :prepend t)
          ("p" "Templates for projects")
          ("pt" "Project-local todo" entry
           (file+headline +org-capture-project-todo-file "Inbox")
           "* TODO %?
:PROPERTIES:
:Date: %U
:Via: %:annotation
:Note: %:note
:END:
:LOGBOOK:
- State \"TODO\"    from \"\"    %U
:END:
%i" :prepend t)
          ("pn" "Project-local notes" entry
           (file+headline +org-capture-project-notes-file "Inbox")
           "* %?
:PROPERTIES:
:Date: %U
:Via: %:annotation
:Note: %:note
:END:
%i
" :prepend t)
          ("pc" "Project-local changelog" entry
           (file+headline +org-capture-project-changelog-file "Unreleased")
           "* %?
:PROPERTIES:
:Date: %U
:Via: %:annotation
:Note: %:note
:END:
%i
" :prepend t)
          ("o" "Centralized templates for projects")
          ("ot" "Project todo" entry #'+org-capture-central-project-todo-file "* TODO %?
:PROPERTIES:
:Date: %U
:Via: %:annotation
:Note: %:note
:END:
:LOGBOOK:
- State \"TODO\"    from \"\"    %U
:END:
%i
" :heading "Tasks" :prepend nil)
          ("on" "Project notes" entry #'+org-capture-central-project-notes-file "* %?
:PROPERTIES:
:Date: %U
:Via: %:annotation
:Note: %:note
:END:
%i
" :heading "Notes" :prepend t)
          ("oc" "Project changelog" entry #'+org-capture-central-project-changelog-file "* %?
:PROPERTIES:
:Date: %U
:Via: %:annotation
:Note: %:note
:END:
%i
" :heading "Changelog" :prepend t))
        ))
  #+end_src
  Tidak ada pengurangan dari /template default/, hanya penambahan /drawer/.
- Tambah /variable/ =+org-capture-link-file=:
  #+begin_src emacs-lisp
(defvar +org-capture-links-file "links.org"
  "Default target for storing links

  Is relative to 'org-directory', unless it is absolute.")
  #+end_src
- /Set variable/ =+org-capture-links-file=:
  #+begin_src emacs-lisp
(setq +org-capture-links-file
      (expand-file-name +org-capture-links-file org-directory))
  #+end_src
- Tambahan untuk /org-capture-templates/ tanpa menghapus /default/ dari /doom/:
  #+begin_src emacs-lisp
(after! org
  (setq org-capture-templates (append org-capture-templates
                                      '(("l" "Link Captures" entry (file+headline +org-capture-links-file "Links")
                                         "** [[%:link][%:description]]\n:PROPERTIES:\n:Date: %T\n:END:\n%i" :immediate-finish t))
                                    )
      ))
  #+end_src
- =org-protocol=
  #+begin_src emacs-lisp
(setq org-protocol-default-template-key "l")
  #+end_src
- =org-roam=
  Set /default viewer/ untuk =org-roam-graph-viewer=:
  #+begin_src emacs-lisp
  (setq org-roam-graph-viewer "xdg-open")
  #+end_src
  - Templates.
    #+begin_src emacs-lisp
  (setq org-roam-dailies-directory "daily/")
  (setq org-roam-dailies-capture-templates
        '(("d" "default" entry
           "* %?"
           :target (file+head "%<%Y-%m-%d>.org"
                              "#+title: %<%Y-%m-%d>\n"))))
  (setq org-roam-capture-templates
        '(("d" "default" plain
           "%?"
           :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+title: ${title}\n")
           :unnarrowed t)
          ("p" "project" plain "* Goals\n\n%?\n\n* Tasks\n\n** TODO Add initial tasks\n\n* Dates\n\n"
           :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+title: ${title}\n#+filetags: Project")
           :unnarrowed t)
          )
        )
(setq org-roam-capture-ref-templates
      '(("r" "ref" plain "%?" :target (file+head "$%<%Y%m%d%H%M%S>-{slug}.org" "#+title: ${title}\n#+date: %U\n") :unnarrowed t)))
    #+end_src

  - Asosiasikan /org-protocol/ dengan /desktop entry/ tersendiri
    #+begin_src conf :tangle ~/.local/share/applications/org-protocol.desktop :mkdirp yes
[Desktop Entry]
Name=Org-Protocol
Exec=emacsclient %u
Icon=emacs-icon
Type=Application
Terminal=false
MimeType=x-scheme-handler/org-protocol
    #+end_src

    Jalankan /keybind/ ~C-c C-v t~ didalam /code block dibawah ini/ untuk mengevaluasi, hanya perlu dilakukan sekali.
    #+begin_src sh :tangle no :exports none
xdg-mime default org-protocol.desktop x-scheme-handler/org-protocol
    #+end_src
    Untuk memastikan, perintah ini:
    #+begin_src sh :tangle no :exports none
xdg-mime query default x-scheme-handler/org-protocol
    #+end_src

    jika dijalankan diterminal mestinya hasilnya seperti ini
    #+RESULTS:
    : org-protocol.desktop
- =org-note=
  #+begin_src emacs-lisp
  (setq org-noter-notes-search-path '("~/Documents/google-drive/org/notes/"))
  #+end_src
- pengaturan /org-mode/ lainnya
  #+begin_src emacs-lisp
(setq org-use-property-inheritance t ;; warisi property dari header level sebelumnya
      )
  #+end_src
*** :term
**** vterm
Package ini membutuhkan /library/ eksternal =libvterm.so=, dan untuk pemakaian pertama kali perlu /compile/ module khusus dengan perintah =M-x vterm-module-compile=. Karena /package/ ini bawaan dari /doom/, tidak perlu dilakukan penambahan di =package.el=.
*** TODO :app
/Module/ =calendar= dan =everywhere= sepertinya cukup menarik.
*** Lainnya

**** WAIT which-key
Nilai /default/-nya 20, yang dilayar laptop dengan resolusi 1366x768 bagian bawahnya tidak muncul.
#+begin_src emacs-lisp :tangle no
(after! which-key
  (setq which-key-frame-max-height 50))
#+end_src
**** Pengaturan kosmetik lainnya
#+begin_src emacs-lisp :tangle no
(setq org-return-follows-link t ; RET akan mengarahkan ke link
      org-confirm-babel-evaluate nil ; jangan lakukan konfirmasi untuk evaluasi babel
      org-tag-alist '(
                      ("@work" . ?w)
                      ("@home" . ?h)
                      ("@nix" . ?n)
                      (:newline)
                      ("Cancelled" . ?c)
                      )
      org-refile-allow-creating-parent-nodes 'confirm
      evil-want-fine-undo t
      undo-limit 80000000 ;80mb
      truncate-string-ellipsis "…"
      )
(display-time-mode 1)
(global-subword-mode 1) ; pisahkan huruf berdasarkan aturan CamelCase

(setq evil-vsplit-window-right t
      evil-split-window-below t)
#+end_src

*** Kustomisasi Lanjutan
Semua yang dicantumkan disini diluar konfigurasi bawaan dari /doom/, sengaja ditaruh disini agar lebih mudah melakukan /trace/ jika ada yang salah. Karena /doom/ sendiri sebenarnya adalah konfigurasi untuk /emacs/, cukup rumit untuk melihat apa yang salah jika ada miskonfigurasi. Jadi sebaiknya lakukan perubahan satu persatu, gunakan /version control/ untuk mempermudah, seperti /git/. =doom sync= setiap perubahan, /restart emacs/ dan jika tidak ada yang salah, /commit/ perubahan tersebut.
*** selectric mode
#+BEGIN_SRC emacs-lisp :tangle no
(after! selectric-mode)
(selectric-mode)
#+END_SRC
*** pywal
#+BEGIN_SRC emacs-lisp :tangle no
(add-hook 'doom-load-theme-hook 'theme-magic-from-emacs)
#+END_SRC
*** ox-hugo
/Template/ /capture/ ini diambil dari [[https://ox-hugo.scripter.co/doc/org-capture-setup/][/ox-hugo/]], yang fungsinya untuk mempermudah proses pembuatan /post/ baru di blog. /Codeblock/ dibawah ini saja sebenarnya hanyalah penambahan /function/ yang nantinya dipanggil didalam =org-capture-templates=.
#+BEGIN_SRC emacs-lisp :tangle no
(with-eval-after-load 'org-capture
  (defun org-hugo-new-subtree-post-capture-template ()
    "Returns `org-capture' template string for new Hugo post.
See `org-capture-templates' for more information."
    (let* (;; http://www.holgerschurig.de/en/emacs-blog-from-org-to-hugo/
           (date (format-time-string (org-time-stamp-format :long :inactive) (org-current-time)))
           (title (read-from-minibuffer "Post Title: ")) ;Prompt to enter the post title
           (fname (org-hugo-slug title)))
      (mapconcat #'identity
                 `(
                   ,(concat "* TODO " title)
                   ":PROPERTIES:"
                   ,(concat ":EXPORT_FILE_NAME: " fname)
                   ,(concat ":EXPORT_DATE: " date) ;Enter current date and time
                   ":END:"
                   "%?\n")                ;Place the cursor here finally
                 "\n"))))
#+END_SRC

**** Alur Workflow dari ox-hugo
Ketika kita memanggil perintah =org-capture=, yang di /doom/ menggunakan =SPC-X=, akan ada satu pilihan /template/ =[h]= untuk /Hugo/ (yang konfigurasinya dibuat [[*org-capture-templates][disini]]). Didalammnya ada tambahan pilihan untuk entri /New Project/ atau /New blogpost/, jika dipilih, keduanya akan melakukan penambahan /heading/ di file =~/Projects/personal/blog/index.org=, disini lokasi dari /blog/ saya. Bedanya pilihan /New Project/ akan membuat /heading/ baru dibawah /heading/ =Projects= yang sudah ada didalam file =index.org=, sebaliknya juga, pilihan /New blogpost/ akan membuat heading baru dibawah /heading/ =Post=.
** RSS
Menggunakan /default/ =elfeed=. Berikut konfigurasi agar /search filter/ mencari /feed/ sejauh 1 bulan kebelakang:
#+begin_src emacs-lisp
(after! elfeed
  (setq elfeed-search-filter "@1-month-ago +unread"))
#+end_src
/Doom-emacs/ otomatis memakai =org-mode= untuk konfigurasi /feed rss/, dan lokasi /default/-nya di =org-directory/elfeed.org=.
** Email
*** =mu4e= + =isync=
**** Konfigurasi System
***** archlinux
- Instalasi Aplikasi
#+begin_src shell :tangle no
yay -S isync mu msmtp
#+end_src
- =mbsyncrc=
  Saya menggunakan 4 /email/ yang disimpan didalam ~/var/mail/alexforsale<nama akun>~, namun ini bisa dimana saja selama /user/ yang digunakan dapat mengaksesnya.
  #+begin_example
IMAPAccount gmail
# Address to connect to
Host imap.gmail.com
User alexarians@gmail.com
# Pass ***************
# To store the password in an encrypted file use PassCmd instead of Pass
PassCmd "gpg2 -q --for-your-eyes-only --no-tty -d ~/.local/share/mail/mailpass-gmail.gpg"
#
# Use SSL
SSLType IMAPS
# The following line should work. If get certificate errors, uncomment the two following lines and read the "Troubleshooting" section.
CertificateFile /etc/ssl/certs/ca-certificates.crt
#CertificateFile ~/.cert/imap.gmail.com.pem
#CertificateFile ~/.cert/Equifax_Secure_CA.pem

IMAPAccount yahoo
Host imap.mail.yahoo.com
User alexforsale@yahoo.com
PassCmd "gpg2 -q --for-your-eyes-only --no-tty -d ~/.local/share/mail/mailpass-yahoo.gpg"
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt
PipelineDepth 10

IMAPAccount ymail
Host imap.mail.yahoo.com
User christian.alexander@ymail.com
PassCmd "gpg2 -q --for-your-eyes-only --no-tty -d ~/.local/share/mail/mailpass-ymail.gpg"
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt
PipelineDepth 10

IMAPAccount hotmail
Host imap-mail.outlook.com
User christian.alexander@windowslive.com
PassCmd "gpg2 -q --for-your-eyes-only --no-tty -d ~/.local/share/mail/mailpass-hotmail.gpg"
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt

IMAPStore gmail-remote
Account gmail

MaildirStore gmail-local
SubFolders Verbatim
# The trailing "/" is important
Path /home/alexforsale/.mail/gmail/
Inbox /home/alexforsale/.mail/gmail/Inbox

Channel gmail-sent
Far :gmail-remote:"[Gmail]/Sent Mail"
Near :gmail-local:sent
Create Near

Channel gmail-drafts
Far :gmail-remote:"[Gmail]/Drafts"
Near :gmail-local:drafts
Create Near

Channel gmail-allmail
Far :gmail-remote:"[Gmail]/All Mail"
Near :gmail-local:archived
Create Near

Channel gmail-trash
Far :gmail-remote:"[Gmail]/Trash"
Near :gmail-local:trash
Create Near

Channel gmail-default
Far :gmail-remote:
Near :gmail-local:
# Exclude everything under the internal [Gmail] folder, except the interesting folders
#Patterns * ![Gmail]* "[Gmail]/Sent Mail" "[Gmail]/Starred" "[Gmail]/All Mail"
Patterns "INBOX" ![Gmail]* #"[Gmail]/Sent Mail" "[Gmail]/Starred" "[Gmail]/All Mail"
# Or include everything
#Patterns *
# Automatically create missing mailboxes, both locally and on the server
Create Both
# Save the synchronization state files in the relevant directory
SyncState *

Group gmail
Channel gmail-default
Channel gmail-sent
Channel gmail-drafts
Channel gmail-trash
Channel gmail-allmail

IMAPStore yahoo-remote
Account yahoo

MaildirStore yahoo-local
SubFolders Verbatim
Path /home/alexforsale/.mail/yahoo/
Inbox /home/alexforsale/.mailyahoo/Inbox

Channel yahoo-default
Far :yahoo-remote:
Near :yahoo-local:
Patterns "INBOX" !Draft !Sent !Archive !Spam
Create Both
SyncState *
CopyArrivalDate yes

Channel yahoo-sent
Far :yahoo-remote:"Sent"
Near :yahoo-local:"Sent"
Create Near
CopyArrivalDate yes

Channel yahoo-draft
Far :yahoo-remote:"Draft"
Near :yahoo-local:"Draft"
Create Near
CopyArrivalDate yes

Channel yahoo-archive
Far :yahoo-remote:"Archive"
Near :yahoo-local:"Archive"
Create Near
CopyArrivalDate yes

Channel yahoo-bulk
Far :yahoo-remote:"Bulk Mail"
Near :yahoo-local:"Bulk Mail"
Create Near
CopyArrivalDate yes

Channel yahoo-trash
Far :yahoo-remote:"Trash"
Near :yahoo-local:"Trash"
Create Near
CopyArrivalDate yes

Group yahoo
channel yahoo-default
channel yahoo-sent
channel yahoo-draft
channel yahoo-bulk

IMAPStore hotmail-remote
Account hotmail

MaildirStore hotmail-local
SubFolders Verbatim
Path /home/alexforsale/.mail/hotmail/
Inbox /home/alexforsale/.mail/hotmail/Inbox

Channel hotmail
Far :hotmail-remote:
Near :hotmail-local:
Patterns *
Create Both

IMAPStore ymail-remote
Account ymail

MaildirStore ymail-local
SubFolders Verbatim
Path /var/spool/mail/alexforsale/ymail/
Inbox /var/spool/mail/alexforsale/ymail/Inbox

Channel ymail
Far :ymail-remote:
Near :ymail-local:
Patterns *
Create Both
  #+end_example

  Untuk detil masing - masing barisnya bisa dilihat dari /manpage/ =mbsync=, dengan perintah ~man 1 mbsync~. Yang perlu diperhatikan adalah untuk /gmail/, saya menggunakan lebih dari satu /channel. Ini dikarenakan /gmail/ memiliki /folder default/ yang diawali dengan =[Gmail]/<namafolder>=, sebenarnya tidak masalah, saya menghilangkan /prefix [Gmail]/ tersebut hanya untuk kemudahan mengaksesnya dari /command line/.
  Untuk /channel/ /yahoo/ dan /ymail/, perlu menggunakan =PipelineDepth 5= untuk menghindari /error/:
  #+begin_example
UID FETCH 370 (BODY.PEEK[])' returned an error: NO [UNAVAILABLE] UID FETCH Service is temporarily not available
  #+end_example
  /Fix/ ini didapat dari [[https://sourceforge.net/p/isync/mailman/isync-devel/thread/CAH%2BzNA9QH5OfHdA_JatG0Z0tqUU5gM5_KOjCrUjy6oOfTt9WGQ%40mail.gmail.com/#msg36754079][sini]]. Dan juga untuk beberapa /mail provider/ melakukan /limiting/, yang berarti kita perlu beberapa kali mengulang perintah ~mbsync -a~ atau ~mbsync <namaakun>~.
  /Password/ untuk masing - masing /account/ disimpan dalam bentuk teks, namun di/encrypt/ mengunakan /gpg/. Dengan /emacs/ cukup buka /file/ dengan ektensi berakhiran =.gpg=, selama kita telah melakukan konfigurasi /gpg key/ otomatis akan terenkripsi setelah /file/ tersebut di/save/. File ini juga yang diakses oleh =msmtp= untuk memperoleh /password/ setiap akun nya.
- =msmtp=
  Untuk detil konfigurasinya bisa dilihat di ~man 1 msmtp~.
  #+begin_example
# Set default values for all following accounts.
defaults
auth           on
tls            on
tls_trust_file /etc/ssl/certs/ca-certificates.crt
logfile        ~/.local/share/mail/msmtp.log

# Gmail
account        gmail
host           smtp.gmail.com
port           587
from           alexarians@gmail.com
user           alexarians
passwordeval   "gpg --quiet --for-your-eyes-only --no-tty --decrypt ~/.local/share/mail/mailpass-gmail.gpg"

# Yahoo service
account        yahoo
auth           on
tls            on
tls_trust_file /etc/ssl/certs/ca-certificates.crt
host           smtp.mail.yahoo.com
port           587
from           alexforsale@yahoo.com
user           alexforsale
passwordeval   "gpg --quiet --for-your-eyes-only --no-tty --decrypt ~/.local/share/mail/mailpass-yahoo.gpg"

# Hotmail
account        hotmail
auth           on
tls            on
tls_trust_file /etc/ssl/certs/ca-certificates.crt
#tls_certcheck  off
host           smtp-mail.outlook.com
port           587
from           christian.alexander@windowslive.com
user           christian.alexander@windowslive.com
passwordeval   "gpg --quiet --for-your-eyes-only --no-tty --decrypt ~/.local/share/mail/mailpass-hotmail.gpg"

# Ymail service
account        ymail
auth           on
tls            on
tls_trust_file /etc/ssl/certs/ca-certificates.crt
host           smtp.mail.yahoo.com
port           587
from           christian.alexander@ymail.com
user           christian.alexander@ymail.com
passwordeval   "gpg --quiet --for-your-eyes-only --no-tty --decrypt ~/.local/share/mail/mailpass-ymail.gpg"

# Set a default account
account default : yahoo
  #+end_example
**** /workflow/
- Setiap /email/ yang telah dikonfigurasi didalam =~/.mbsyncrc= perlu di/pull/ secara manual terlebih dahulu dengan perintah:
#+begin_src shell :tangle no
mbsync -a
#+end_src
  Proses ini akan memakan waktu cukup lama jika akun - akun tersebut memiliki banyak /email/.
- Setelah semua /email/ disimpan secara lokal, jalankan 2 perintah =mu= yang akan melakukan inisialisasi dan /indexing/ setiap akun - akun email tersebut:
  #+begin_src shell :tangle no
mu init --maildir /var/mail/alexforsale --my-address alexforsale@yahoo.com \
    --my-address alexarians@gmail.com \
    --my-address christian.alexander@ymail.com \
    --my-address christian.alexander@windowslive.com
mu index
  #+end_src
**** Konfigurasi /emacs/
Konfigurasi untuk /mu4e/ berkaitan dengan konfigurasi di =~/.mbsyncrc=.
/Set/ =mbsync= sebagai /backend/, ini merupakan defaultnya jadi tidak perlu diset secara eksplisit didalam konfigurasi /emacs/.
#+begin_src emacs-lisp
(setq +mu4e-backend 'mbsync)
#+end_src

Selanjutnya adalah konfigurasi untuk setiap akunnya, konfigurasi disini mengikuti konfigurasi yang dibuat didalam =~/.mbsyncrc=.
- =gmail=
  #+begin_src emacs-lisp
(set-email-account! "gmail"
  '((mu4e-sent-folder       . "/gmail/sent")
    (mu4e-drafts-folder     . "/gmail/drafts")
    (mu4e-trash-folder      . "/gmail/trash")
    (mu4e-refile-folder     . "/gmail/archived")
    (smtpmail-smtp-user     . "alexarians@gmail.com")
    (user-mail-address      . "alexarians@gmail.com")    ;; only needed for mu < 1.4
    (mu4e-compose-signature . "---\nKristian Alexander P"))
  t)
  #+end_src
- =ymail=
  #+begin_src emacs-lisp
(set-email-account! "ymail"
  '((mu4e-sent-folder       . "/ymail/Sent")
    (mu4e-drafts-folder     . "/ymail/Draft")
    (mu4e-trash-folder      . "/ymail/Trash")
    (mu4e-refile-folder     . "/ymail/Archive")
    (smtpmail-smtp-user     . "christian.alexander@ymail.com")
    (user-mail-address      . "christian.alexander@ymail.com")    ;; only needed for mu < 1.4
    (mu4e-compose-signature . "---\nKristian Alexander P"))
  t)
  #+end_src

- =yahoo=
  #+begin_src emacs-lisp
(set-email-account! "Yahoo"
  '((mu4e-sent-folder       . "/yahoo/Sent")
    (mu4e-drafts-folder     . "/yahoo/Draft")
    (mu4e-trash-folder      . "/yahoo/Trash")
    (mu4e-refile-folder     . "/yahoo/Archive")
    (smtpmail-smtp-user     . "alexforsale@yahoo.com")
    (user-mail-address      . "alexforsale@yahoo.com")    ;; only needed for mu < 1.4
    (mu4e-compose-signature . "---\nKristian Alexander P"))
  t)
  #+end_src

- =hotmail=
  #+begin_src emacs-lisp
(set-email-account! "hotmail"
  '((mu4e-sent-folder       . "/hotmail/Sent")
    (mu4e-drafts-folder     . "/hotmail/Drafts")
    (mu4e-trash-folder      . "/hotmail/Deleted")
    (mu4e-refile-folder     . "/hotmail/Archive")
    (smtpmail-smtp-user     . "christian.alexander@windowslive.com")
    (user-mail-address      . "christian.alexander@windowslive.com")    ;; only needed for mu < 1.4
    (mu4e-compose-signature . "---\nKristian Alexander P"))
  t)
  #+end_src

Untuk konfigurasi dari =msmtp=:
#+begin_src emacs-lisp
(after! mu4e
  (setq sendmail-program (executable-find "msmtp")
        send-mail-function #'smtpmail-send-it
        message-sendmail-f-is-evil t
        message-sendmail-extra-arguments '("--read-envelope-from")
        message-send-mail-function #'message-send-mail-with-sendmail)
        mml-secure-openpgp-sign-with-sender t
        mml-secure-openpgp-encrypt-to-self t)
#+end_src

Karena menggunakan /gnupg/, saya menambahkan /action/ baru untuk mempermudah proses /receiving gpg key/ dari dalam /email/. Diambil dari [[http://hugoduncan.org/post/snarf-pgp-keys-in-emacs-mu4e.html][sini]]:
#+begin_src emacs-lisp
(after! mu4e
  (defun mu4e-view-snarf-pgp-key (&optional msg)
    "Snarf the pgp key for the specified message."
    (interactive)
    (let* ((msg (or msg (mu4e-message-at-point)))
           (path (mu4e-message-field msg :path))
           (cmd (format "%s verify --verbose %s"
                        mu4e-mu-binary
                        (shell-quote-argument path)))
           (output (shell-command-to-string cmd)))
      (let ((case-fold-search nil))
        (when (string-match "key:\\([A-F0-9]+\\)" output)
          (let* ((cmd (format "%s --recv %s"
                              epg-gpg-program (match-string 1 output)))
                 (output (shell-command-to-string cmd)))
            (message output))))))

  (add-to-list 'mu4e-view-actions
               '("Snarf PGP keys" . mu4e-view-snarf-pgp-key) t))
#+end_src
** rgb
#+BEGIN_SRC emacs-lisp
(add-hook! 'rainbow-mode-hook
  (hl-line-mode (if rainbow-mode -1 +1)))
#+END_SRC
* Module =doom=
Semua dokumentasi dan konfigurasi dari /module - module/ =doom= disimpan didalam /heading/ ini, untuk kemudahan /maintenance/. Untuk dokumentasi lebih dalam lagi umumnya tersedia /file/ =README.org= didalam /directory/ /modules/ dalam =~/.emacs.d=.
** =company=
Fungsi utamanya adalah sebagai /code completion/. Saya menggunakan /flags/ =+tng= yang memungkinkan /completion/ menggunakan ~TAB~. Saya tidak menggunakan konfigurasi lanjutan untuk /module/ ini.
** =ivy +fuzzy=
Integrasi ke banyak perintah /emacs/, dan juga /unified interface/ untuk pencarian /project/ dan /replace/, jika menggunakan =ripgrep=.
*** Dependency
- /archlinux/
  #+begin_src shell :tangle no
  sudo pacman -S --noconfirm --needed ripgrep
  #+end_src
- /freebsd/
  #+begin_src shell :tangle no
  sudo pkg install -y ripgrep
  #+end_src
- /guix/
  #+begin_src shell :tangle no
  guix install ripgrep
  #+end_src
** =doom=
Konfigurasi /doom-emacs/, yang saya ubah disini hanyalah /themes/ dan /fonts/, sudah dikonfigurasi di[[*Konfigurasi Dasar][sini]].
** =doom-dashboard=
/Dashboard/ awal ketika memulai /doom-emacs/. Tidak ada konfigurasi lanjutan
** =hl-todo=
/Syntax highlighting/ untuk /tag/ TODO/FIXME/NOTE dalam beberapa /major-modes/ bahasa /programming/.
** =modeline=
/Modeline/ minimalistik ala /doom/. /Eval/ /codeblock/ dibawah ini jika bagian kanan dari /modeline/ tampak terpotong (/default/-nya adalan 1.2).
#+begin_src emacs-lisp :tangle no
(setq all-the-icons-scale-factor 1.1)
#+end_src
** =ophints=
/Operation hinting/. Tidak ada konfigurasi lanjutan.
** =vc-gutter=
Tidak ada konfigurasi lanjutan.
** =vi-tilde-fringe=
Menampilkan /tilde/ (~), untuk menandakan baris kosong seperti di vi/vim.
** =window-select=
/Module/ yang mempermudah dalam memilih /window/ tanpa menggunakan /mouse/. Saya menggunakan /flags/ =+switch-window= karena ketika kita dalam proses /switch/, konten dari setiap /window/ menjadi gelap, hanya ada karakter yang terlihat.
** =workspaces=
Fitur /workspace/ didalam /emacs/. Tidak ada konfigurasi lanjutan.
** =evil=
Fitur yang membuat semakin banyak orang menggunakan /emacs/. Dan juga (sayangnya) yang membuat semakin banyak orang yang berkata "/emacs/ itu sebenarnya klone dari vim..."
** =file-template=
Fitur /file templating/ yang menggunakan /yasnippet/. Saya masih belum memerlukan fitur ini, jadi tidak ada konfigurasi lanjutan.
** =fold=
Fitur simpel, /code folding/, seperti didalam =org-mode=, namun bisa dilakukan hampir di semua /minor mode/.
** =format=
Fitur /code formatter/, umumnya untuk bahasa pemrograman. Dependensi yang diperlukan tergantung dari bahasa pemrograman yang digunakan.
** =multiple-cursors=
Edit beberapa baris atau kalimat secara bersamaan, dalam =evil-mode= biasanya dengan prefix =g z=.
** =snippet=
Didalam /module/ ini fitur dari /yasnippet/ digunakan sepenuhnya. Didalam =evil mode= /snippet/ dapat diakses dengan =SPC i s=.
** =word-wrap=
Fitur /word wrapping/ dengan konfigurasi tambahan, /default/-nya tidak di /enabled/ secara global.
** =dired=
Konfigurasi tambahan untuk /module dired/ yang merupakan /module/ standar dalam /emacs/. Jika menggunakan /FreeBSD/ memerlukan /package/ =coreutils= yang menyediakan /program/ ~gls~ (implementasi ~ls~ dari /gnu/).
** =electric=
Juga merupakan /module/ bawaan dari /emacs/.
** =undo=
Juga merupakan /module/ bawaan dari /emacs/, namun dengan tambahan /module/.
** =vc=
/Module/ bawaan dari /emacs/.
** =vterm=
Sudah dikover di[[*Others][sini]].
** =syntax=
/Module flycheck/ dengan kustomisasi /ala/ /doom/.
** =ansible=
Memerlukan tambahan /package/ =ansible=, umumnya tersedia di hampir semua /distro/.
** =editorconfig=
Butuh /package/ =editorconfig=.
** =eval=
/Dependency/-nya tergantung dari bahasa pemograman yang digunakan.
** =lookup=
Koleksi dari beberapa /package emacs/ dengan fitur /code navigation/ dan /documentation lookup/. Memiliki =dependencies=: =ripgrep=, =wordnet=, dan =sqlite3=.
** =lsp=
Integrasi /language servers/ kedalam /emacs/. /Dependency/-nya sangat tergantung dari /languague/ yang dipilih.
** =magit=
/Git/ dalam /emacs/. Tentunya membutuhkan /package/ =git=.
** =pass=
Integrasi /password-store/ dalam /emacs/. Di =archlinux= dan beberapa distro lainnya nama /package/-nya =pass=, untuk /FreeBSD/ dengan naman /package/ =password-store=.
